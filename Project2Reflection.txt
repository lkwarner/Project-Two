Going into this project, I knew nothing about XML, HTML, or CSS. Finishing this project, I now know a considerable amount more that when I started. This project pushed me to experiment and research different methods for doing functions like tables, overflow functions, and alignment. 

I chose to create a database of authors form the Amazon publisher 47North. Each author was a parent node with the tag <author>. Under each author tag I included their biography, then each of the books that they have published through 47North, the book descriptions, and the year each book was published. The author’s names I sorted by the tags <name> and <author_first_name> and <author_last_name>. I figured that if a user were to search this database, they would want to be able to search the author, whether it be by their first name or last. Under the author’s name I placed their biography under the <biography> tag. I then created the <book_title> tag, for users looking for a specific book. The book description fell under the <book_description> tag. Lastly, under the tags <year> and <year_published>, I had the year that the book was published by 47North.  For each book under an author, I opened and closed the <author> tag. This helped keep the formatting of the database and kept entries from disappearing. 

When I began creating a table in my XSL stylesheet, I began to notice that the information was getting jumbled in the table format. I kept the table to work on separately, but I also created a separate stylesheet that would be a plain page with simple hierarchy.  I tried creating an external CSS stylesheet but no matter what I tried, I had difficulty linking it back to my XML database. I ended up doing my CSS internally so that it would apply properly. I went through a lot of changes and research before I was satisfied with a stylesheet for each of my databases. For both, I applied colors of grey that are used on the 47North website and a shade of green that matches the 47North logo. 

In my table database, I used alternating shades of grey to add contrast. I used examples found at W3Schools and also from Dr. Lam’s website’s source code.  I made each row the same height for consistency. Because there is a lot of text, I had to do something with all the overflow text in the biography and book description sections. I attempted to create a ‘read more’ button, but was unable to get it to fully function. I ended up going a simpler route and adding a scroll bar for the extra text. I had to do a lot of tinkering before I got all of the text to line up in each row and also to make sure book titles did not overflow into the row beneath. I also created a footer to both databases with a link to 47North’s website, my name, and my contact information. 

I created the simpler page for my database to account for the large amount of text. I was able to make a simple page, but I was unfortunately unable to do anything special with it. I attempted to do different colors and alternating colors, but could not get it to function correctly or look aesthetically pleasing. I ended up leaving it as a simple page without any bells or whistles. I did also attempt to try a sorting function and a search function, but ran out of time to fully learn how to incorporate these into my database. 

In the end, I prefer the table I made for my database. It looks more pleasing, and I was able to apply a wider range of interesting styles to the page than my second database. I also feel that it pushed me and forced me to learn how to fix each problem that I encountered.  This project as a whole has given me a greater appreciation for those that use these processes on a daily basis for work. I am greatly satisfied with the knowledge that I have gained from this project. I feel far more comfortable with learning computer languages than I did before starting this project. 
